{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","className","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"yNAIaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAU,IAFE,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAkBhD,OACI,sBAAMC,SAXW,SAAEC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAMlB,SACI,qBAAKO,UAAU,wBAAf,SACI,uBACIA,UAAU,eACVC,KAAK,OACLC,MAAQV,EACRW,SArBU,SAAER,GACxBF,EAAeE,EAAES,OAAOF,e,+BCTnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,sBAIH,mCAJG,SAMAI,MAAOF,EAFV,oCAJG,cAMbG,EANa,gBAOIA,EAAKC,OAPT,uBAOXC,EAPW,EAOXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAbvB,kBAiBZM,GAjBY,4CAAH,sDCGPO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAEtC,OACI,mCACI,sBAAKR,UAAU,yCAAf,UACI,qBAAKsB,IAAMd,EAAMR,UAAU,eAAeuB,IAAML,IAChD,qBAAKlB,UAAU,YAAf,SACI,oBAAIA,UAAU,aAAd,SAA6BkB,YCNpCM,EAAU,SAAC,GAAoB,IAAjBlB,EAAgB,EAAhBA,SAAgB,ECDf,SAAEA,GAAe,IAAD,EACdf,mBAAS,CAC/BsB,KAAM,GACNY,SAAU,IAH0B,mBACjCC,EADiC,KAC1BC,EAD0B,KAiBxC,OAXAC,qBAAW,WACPvB,EAASC,GAAWuB,MAAM,SAAAb,GAEtBW,EAAS,CACLd,KAAMG,EACNS,SAAS,SAIlB,CAAEnB,IAEEoB,EDR0BI,CAAcxB,GAAlCa,EAR0B,EAQ/BN,KAAaY,EARkB,EAQlBA,QAErB,OACI,qCACI,qBAAIzB,UAAU,yDAAd,cAA0EM,EAA1E,OAGImB,GAAW,qBAAKzB,UAAU,gCAAf,SACK,qBAAKA,UAAU,gCAInC,qBAAKA,UAAU,oBAAf,SAWQmB,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,SAM1B,2BEAGc,EAtCM,WAAO,IAAD,EAEaxC,mBAAS,CAAC,QAFvB,mBAEhByC,EAFgB,KAEJ1C,EAFI,KAYvB,OACI,sBAAKU,UAAU,yBAAf,UAEI,+BAAI,mBAAGA,UAAU,eAAjB,mBACA,cAAC,EAAD,CAAaV,cAAgBA,IAC7B,uBAIA,6BAEQ0C,EAAWjB,KAAK,SAAAT,GAAQ,OAChB,cAAC,EAAD,CACIA,SAAWA,GACLA,YCtBtC2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.df48a877.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState( '');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 0 ) {\r\n            setCategories( cats => [inputValue, ...cats ] );\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <div className=\"input-group mb-3 mt-3\">\r\n                <input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    value={ inputValue }\r\n                    onChange={ handleInputChange }\r\n                />\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n","export const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=20&api_key=`;\r\n\r\n    const api_key = 'cwyi0zjuQ7lG2dwzvoC34IxiIR0nLOW8'; \r\n\r\n    const resp = await fetch( url + api_key );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react';\r\n\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card animate__animated animate__fadeIn\">\r\n                <img src={ url } className=\"card-img-top\" alt={ title }/>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{ title }</h5>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    // useEffect( () => { // por primera vez\r\n    //     getGifs( category ).then( setImages );\r\n    // }, [ category ]);\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn mb-4 text-capitalize\"> { category } </h3>\r\n\r\n            { \r\n                loading && <div className=\"d-flex justify-content-center\">\r\n                                <div className=\"spinner-border text-light\"></div>\r\n                            </div>\r\n            }\r\n\r\n            <div className=\"card-columns mb-5\">\r\n\r\n                {\r\n                    // images.map( img => ( \r\n                    //     <li key={ img.id }> { img.title } </li>\r\n                    // ))\r\n\r\n                    // images.map( ({ id, title }) => (\r\n                    //     <li key={ id }> { title } </li>\r\n                    // ))\r\n\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            { ...img } \r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n            <hr/>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading:  true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category ).then( img => {\r\n\r\n            setstate({ \r\n                data: img,\r\n                loading: false\r\n            });\r\n\r\n        });\r\n    }, [ category ]); \r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['BTS']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories( ['RM', 'J-Hope', 'Suga', 'Jin'] );\r\n    //     setCategories( cats => [...categories, 'Jin'] );\r\n    //     setCategories( [...categories, 'Jin'] );\r\n    // }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container mx-auto mt-5\">\r\n\r\n            <h2><i className=\"fas fa-cat\"></i> GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr/>\r\n\r\n            {/* <button onClick={ handleAdd } >Agregar</button> */}\r\n\r\n            <ul>\r\n                { \r\n                    categories.map( category =>  \r\n                            <GifGrid \r\n                                category={ category }\r\n                                key={ category }\r\n                            />)\r\n                }\r\n            </ul>\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// GitExpertApp\n// <h2>GifExperteApp</h2>\n//<hr/>"],"sourceRoot":""}